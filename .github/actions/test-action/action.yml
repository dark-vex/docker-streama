name: 'Hello World'
description: 'Greet someone'
inputs:
  GITHUB_TOKEN:
    description: 'A Github PAT'
    required: true
  DOCKER_USER:
    description: 'Docker User'
    required: true
  DOCKER_PASS:
    description: 'Docker Pass'
    required: true
  SYSDIG_SECURE_TOKEN:
    description: 'Secure API Token'
    required: true
  platform: 
    description: 'build platform'
    required: true
outputs:
  versioning:
    description: "app version" 
    value: ${{ steps.versioning.outputs.version-id }}
runs:
  using: "composite"
  steps:
    # Check out code
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ inputs.DOCKER_USER }}
        password: ${{ inputs.DOCKER_PASS }}
    # Create a release
    - id: release
      uses: rymndhng/release-on-push-action@master
      with:
        bump_version_scheme: patch
        tag_prefix: v

    - name: Check Output Parameters
      id: version-id
      run: |
        echo "Got tag name ${{ steps.release.outputs.tag_name }}"
        echo "Got release version ${{ steps.release.outputs.version }}"
      shell: bash

    - id: versioning
      run: echo "::set-output name=version-id::$(echo $RANDOM)"
      shell: bash

    # Workaround for issue https://github.com/docker/buildx/issues/495#issuecomment-918925854
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
      with:
        image: tonistiigi/binfmt:latest
        platforms: all

    - name: Generate static files
      run: |
        docker buildx build --push --platform ${{ inputs.platform }} -t docker.io/darkvex/docker-streama:test-${{ steps.release.outputs.version }} -t docker.io/darkvex/docker-streama:test -f Dockerfile .
      shell: bash
      

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ inputs.DOCKER_USER }}
        password: ${{ inputs.DOCKER_PASS }}

    - name: Generate static files
      run: |
        docker pull docker.io/darkvex/docker-streama:test-${{ steps.release.outputs.version }}
      shell: bash

    #- name: Scan image
    #  id: scan
    #  uses: sysdiglabs/scan-action@v3
    #  with:
    #    image-tag: "docker.io/darkvex/docker-streama:test"
    #    sysdig-secure-token: ${{ inputs.SYSDIG_SECURE_TOKEN }}
    #    input-type: docker-daemon
    #    run-as-user: root

    - name: Scan image
      id: scan
      uses: sysdiglabs/scan-action@v3
      with:
        image-tag: "docker.io/darkvex/docker-streama:test-${{ steps.release.outputs.version }}"
        sysdig-secure-token: ${{ inputs.SYSDIG_SECURE_TOKEN }}
        input-type: docker-daemon
        run-as-user: root

    - name: Update Scan results
      uses: github/codeql-action/upload-sarif@v1
      if: always()
      with:
        sarif_file: ${{ steps.scan.outputs.sarifReport }}
